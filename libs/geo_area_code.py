def find_geo_area_code(longitude, latitude):
	geo_area_code= {
    "72 74 38 36":('JK01',[71, 37]),
    "74 76 38 36":('JK02',[75, 37]),
    "76 78 38 36":('JK03',[77, 37]),
    "72 74 36 34":('JK04',[73, 35]),
    "74 76 36 34":('JK05',[75, 35]),
    "76 78 36 34":('JK06',[77, 35]),
    "78 80 36 34":('JK07',[79, 35]),
    "80 82 36 34":('JK08',[81, 35]),
    "72 74 34 32":('JK09',[73, 33]),
    "74 76 34 32":('HPJKPN10',[75, 33]),
    "76 78 34 32":('HPJK11',[77, 33]),
    "78 80 34 32":('HPJK12',[79, 33]),
    "74 76 32 30":('PN13',[75, 31]),
    "76 78 32 30":('HPHRPNUA14',[77, 31]),
    "78 80 32 30":('HPUA15',[79, 31]),
    "80 82 32 30":('UA16',[81, 31]),
    "72 74 30 28":('RJ17',[73, 31]),
    "74 76 30 28":('HRPNRJ18',[75, 29]),
    "76 78 30 28":('HRUP19',[77, 29]),
    "78 80 30 28":('UAUP20',[79, 29]),
    "80 82 30 28":('UAUP21',[81, 29]),
    "68 70 28 26":('RJ22',[69, 27]),
    "70 72 28 26":('RJ23',[71, 27]),
    "72 74 28 26":('RJ24',[73, 27]),
    "74 76 28 26":('RJ25',[75, 27]),
    "76 78 28 26":('HRMPRJUP26',[77, 27]),
    "78 80 28 26":('MPUP27',[79, 27]),
    "80 82 28 26":('UP29',[81, 27]),
    "82 84 28 26":('UP30',[83, 27]),
    "84 86 28 26":('BR31',[85, 27]),
    "86 88 28 26":('BRSK32',[87, 27]),
    "88 90 28 26":('ASSK33',[89, 27]),
    "90 92 28 26":('AS34',[91, 27]),
    "92 94 28 26":('ARAS35',[93, 27]),
    "94 96 28 26":('ASARNL36',[95, 27]),
    "96 98 28 26":('AR37',[97, 27]),
    "68 70 26 24":('GJ38',[67, 25]),
    "70 72 26 24":('GJRJ40',[71, 25]),
    "72 74 26 24":('GJRJ41',[73, 25]),
    "74 76 26 24":('MPRJ42',[75, 25]),
    "76 78 26 24":('RJMP43',[77, 25]),
    "78 80 26 24":('MPUP44',[79, 25]),
    "80 82 26 24":('MPUP45',[81, 25]),
    "82 84 26 24":('BRJHMPUP46',[83, 25]),
    "84 86 26 24":('BRJH47',[85, 25]),
    "86 88 26 24":('BRJH48',[87, 25]),
    "88 90 26 24":('JHMLWB49',[89, 25]),
    "90 92 26 24":('MLTR50',[91, 25]),
    "92 94 26 24":('ASMLMZNL51',[93, 25]),
    "94 96 26 24":('MNMZ52',[95, 25]),
    "68 70 24 22":('GJ53',[69, 23]),
    "70 72 24 22":('GJ54',[71, 23]),
    "72 74 24 22":('GJRJ55',[73, 23]),
    "74 76 24 22":('MPGJRJ56',[75, 23]),
    "76 78 24 22":('MP57',[77, 23]),
    "78 80 24 22":('MP58',[79, 23]),
    "80 82 24 22":('CGMP59',[81, 23]),
    "82 84 24 22":('CGJHMPUP60',[83, 23]),
    "84 86 24 22":('JHORWB61',[85, 23]),
    "86 88 24 22":('BRJHWB62',[87, 23]),
    "88 90 24 22":('MLWB63',[89, 23]),
    "90 92 24 22":('TR64',[91, 23]),
    "92 94 24 22":('MZMNTR66',[93, 23]),
    "68 70 22 20":('GJ67',[69, 21]),
    "70 72 22 20":('GJDD68',[71, 21]),
    "72 74 22 20":('GJDD69',[73, 21]),
    "74 76 22 20":('GJMHMP70',[75, 21]),
    "76 78 22 20":('MHMP71',[77, 21]),
    "78 80 22 20":('MHMP72',[79, 21]),
    "80 82 22 20":('CGMHMP73',[81, 21]),
    "82 84 22 20":('CGOR74',[83, 21]),
    "84 86 22 20":('OR75',[85, 21]),
    "86 88 22 20":('ORWB76',[87, 21]),
    "72 74 20 18":('MH77',[73, 19]),
    "74 76 20 18":('MH78',[75, 19]),
    "76 78 20 18":('MH79',[77, 19]),
    "78 80 20 18":('MHTG80',[79, 19]),
    "80 82 20 18":('CGMHTG81',[81, 19]),
    "82 84 20 18":('APOR82',[81, 19]),
    "84 86 20 18":('APOR83',[83, 19]),
    "72 74 18 16":('MH84',[73, 15]),
    "74 76 18 16":('KAMH85',[75, 17]),
    "76 78 18 16":('KAMHTG86',[77, 17]),
    "78 80 18 16":('APTG87',[79, 17]),
    "80 82 18 16":('APCGTG89',[81, 17]),
    "82 84 18 16":('AP90',[83, 17]),
    "72 74 16 14":('GAMH91',[73, 15]),
    "74 76 16 14":('GAKA92',[75, 15]),
    "76 78 16 14":('APKA93',[77, 15]),
    "78 80 16 14":('APTG94',[79, 15]),
    "80 82 16 14":('AP95',[81, 15]),
    "74 76 14 12":('KAKL96',[75, 13]),
    "76 78 14 12":('KATN97',[77, 13]),
    "78 80 14 12":('APKATN98',[79, 13]),
    "80 82 14 12":('APTN99',[81, 13]),
    "74 76 12 10":('KL100',[75, 11]),
    "76 78 12 10":('KLTN101',[77, 11]),
    "78 80 12 10":('TN102',[79, 11]),
    "76 78 10 8":('KLTN103',[77, 9]),
    "78 80 10 8":('TN104',[79, 9])
	}
	latitude_min = 8
	latitude_max = 38
	longitude_min = 68
	longitude_max = 98
	k = 8
	l = 10
	i = 68
	j = 70
	while (not i <= longitude <= j) and j <= longitude_max :
		i = i+2
		j = j+2
	while (not k <= latitude <= l) and l <= latitude_max :
		k = k+2
		l = l+2
	return geo_area_code.get(str(i)+' '+str(j)+' '+str(l)+' '+str(k))
